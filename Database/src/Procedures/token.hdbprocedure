PROCEDURE "DataWareHouse.Database.Procedures::token"(
		IN APP NVARCHAR(200),
		IN EXCEPTION_ON_ERROR INTEGER DEFAULT 1,
		OUT JWT NVARCHAR(5000)
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER AS
BEGIN
	DECLARE JSON_CREDENTIALS NVARCHAR(5000);
	DECLARE JSON_RESPONSE NVARCHAR(5000);
	DECLARE FAILED NVARCHAR(5000);
	DECLARE URL NVARCHAR(5000);
	DECLARE CLIENTID NVARCHAR(5000);
	DECLARE CLIENTSECRET NVARCHAR(5000);
	
	SELECT JSON INTO JSON_CREDENTIALS FROM (SELECT JSON FROM "DataWareHouse.Database.Synonyms::XSA_KEY_VAULT_KEYS" WHERE APPNAME = APP);
	
	SELECT JSON_VALUE(JSON_CREDENTIALS, '$.clientid') INTO CLIENTID FROM "DataWareHouse.Database.Synonyms::DUMMY";
	SELECT JSON_VALUE(JSON_CREDENTIALS, '$.clientsecret') INTO CLIENTSECRET FROM "DataWareHouse.Database.Synonyms::DUMMY";
	SELECT JSON_VALUE(JSON_CREDENTIALS, '$.url') INTO URL FROM "DataWareHouse.Database.Synonyms::DUMMY";
	
	CALL "DataWareHouse.Database.Procedures::bash"(COMMAND => 'curl -s -X POST ' || URL || '/oauth/token -u "' || CLIENTID || ':' || CLIENTSECRET || '" -d "grant_type=client_credentials&token_format=jwt"', OUTPUT => response);
	
	SELECT RESPONSE INTO JSON_RESPONSE FROM :response;
	
	RESPONSE_TABLE = SELECT JSON_VALUE(JSON_RESPONSE, '$.access_token') AS JWT FROM "DataWareHouse.Database.Synonyms::DUMMY";
	
	SELECT JWT INTO JWT FROM :RESPONSE_TABLE;
	
	IF JWT IS NULL THEN
		IF EXCEPTION_ON_ERROR = 1 THEN
			CALL "DataWareHouse.Database.Procedures::error"(JSON_RESPONSE);
		END IF;
	END IF;

END